int main(){


    IntegrateurNewmark N1(0.0);
    IntegrateurEulerCromer EC1(0.0);

    double dt(0.1);

    Bille bille1({0,0,0}, {10,0,10});
    Bille bille2({0,0,0}, {10,0,10});


    std::cout << "Test Euleur-Cromer bille: " << std::endl;

     do {

        std::cout << "######################" << std::endl;
        std::cout << EC1.getTemps() << std::endl;
        std::cout << bille1.getParam() << "      parametre" << std::endl;
        std::cout << bille1.getVitesse() << "     vitesse" << std::endl;
        EC1.integre(bille1, dt);
        EC1.augmente_t(dt);

    } while ( EC1.getTemps() <= 2 );


    std::cout << "########################" << std::endl;

    std::cout << "Test Newmark bille: " << std::endl;

     do {

        std::cout << "######################" << std::endl;
        std::cout << N1.getTemps() << std::endl;
        std::cout << bille2.getParam() << "      parametre" << std::endl;
        std::cout << bille2.getVitesse() << "     vitesse" << std::endl;
        N1.integre(bille2, dt);
        N1.augmente_t(dt);

    } while ( N1.getTemps() <= 2 );



    IntegrateurNewmark N2(0.0);
    IntegrateurEulerCromer EC2(0.0);

    OH oh1({1,0,0}, {0,1,0});
    OH oh2({1,0,0}, {0,1,0});


    std::cout << "Test Euleur-Cromer OH : " << std::endl;

     do {

        std::cout << "######################" << std::endl;
        std::cout << EC2.getTemps() << std::endl;
        std::cout << bille1.getParam() << "      parametre" << std::endl;
        std::cout << bille1.getVitesse() << "     vitesse" << std::endl;
        EC2.integre(bille1, dt);
        EC2.augmente_t(dt);

    } while ( EC2.getTemps() <= 2 );


    std::cout << "########################" << std::endl;

    std::cout << "Test Newmark bille: " << std::endl;

     do {

        std::cout << "######################" << std::endl;
        std::cout << N2.getTemps() << std::endl;
        std::cout << bille2.getParam() << "      parametre" << std::endl;
        std::cout << bille2.getVitesse() << "     vitesse" << std::endl;
        N2.integre(bille2, dt);
        N2.augmente_t(dt);

    } while ( N2.getTemps() <= 2 );


    std::cout << "######## FIN DES TESTS #########" << std::endl;


    return 0;

}
